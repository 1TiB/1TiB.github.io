[{"content":"Intro  We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read. You can find any YML to TOML converters if necessary.   Guide Follow Quick Start guide to setup hugo and create a new site.\n Note: Use -f to select yml format\nhugo new site \u0026lt;name of site\u0026gt; -f yml\n Make sure you install latest version of hugo(\u0026gt;=0.82.0).\nAfter you have created a new site, at Step 3 follow the steps:\nMethod 1 Inside the folder of your Hugo site, run:\n1  git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1   Note: You may use  --branch v5.0 to end of above command if you want to stick to specific release.\n Updating theme :\n1 2  cd themes/PaperMod git pull    Method 2 you can use as submodule with\n1 2  git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod --depth=1 git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically)   Note: You may use  --branch v5.0 to end of above command if you want to stick to specific release.\n Updating theme :\n1  git submodule update --remote --merge    Method 3 Or you can Download as Zip from Github Page and extract in your themes directory\nDirect Links:\n Master Branch (Latest) v5.0 v4.0 v3.0 v2.0 v1.0  Finally \u0026hellip; Add in config.yml:\n1  theme:\u0026#34;PaperMod\u0026#34;   Quick Links   Papermod - Features   Papermod - FAQs   Papermod - Variables   Papermod - Icons   ChangeLog    Sample config.yml  Example Site Structure is present here: exampleSite\n Use appropriately\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134  baseURL:\u0026#34;https://examplesite.com/\u0026#34;title:ExampleSitepaginate:5theme:PaperModenableRobotsTXT:truebuildDrafts:falsebuildFuture:falsebuildExpired:falsegoogleAnalytics:UA-123-45minify:disableXML:trueminifyOutput:trueparams:env:production# to enable google analytics, opengraph, twitter-cards and schema.title:ExampleSitedescription:\u0026#34;ExampleSite description\u0026#34;keywords:[Blog, Portfolio, PaperMod]author:Me# author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authorsimages:[\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;]DateFormat:\u0026#34;January 2, 2006\u0026#34;defaultTheme:auto# dark, lightdisableThemeToggle:falseShowReadingTime:trueShowShareButtons:trueShowPostNavLinks:trueShowBreadCrumbs:trueShowCodeCopyButtons:falsedisableSpecial1stPost:falsedisableScrollToTop:falsecomments:falsehidemeta:falsehideSummary:falseshowtoc:falsetocopen:falseassets:# disableHLJS: true # to disable highlight.js# disableFingerprinting: truefavicon:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;favicon16x16:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;favicon32x32:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;apple_touch_icon:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;safari_pinned_tab:\u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34;label:text:\u0026#34;Home\u0026#34;icon:/apple-touch-icon.pngiconHeight:35# profile-modeprofileMode:enabled:false# needs to be explicitly settitle:ExampleSitesubtitle:\u0026#34;This is subtitle\u0026#34;imageUrl:\u0026#34;\u0026lt;img location\u0026gt;\u0026#34;imageWidth:120imageHeight:120imageTitle:my imagebuttons:- name:Postsurl:posts- name:Tagsurl:tags# home-info modehomeInfoParams:Title:\u0026#34;Hi there \\U0001F44B\u0026#34;Content:Welcome to my blogsocialIcons:- name:twitterurl:\u0026#34;https://twitter.com/\u0026#34;- name:stackoverflowurl:\u0026#34;https://stackoverflow.com\u0026#34;- name:githuburl:\u0026#34;https://github.com/\u0026#34;analytics:google:SiteVerificationTag:\u0026#34;XYZabc\u0026#34;bing:SiteVerificationTag:\u0026#34;XYZabc\u0026#34;yandex:SiteVerificationTag:\u0026#34;XYZabc\u0026#34;cover:hidden:true# hide everywhere but not in structured datahiddenInList:true# hide on list pages and homehiddenInSingle:true# hide on single pageeditPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit link# for search# https://fusejs.io/api/options.htmlfuseOpts:isCaseSensitive:falseshouldSort:truelocation:0distance:1000threshold:0.4minMatchCharLength:0keys:[\u0026#34;title\u0026#34;,\u0026#34;permalink\u0026#34;,\u0026#34;summary\u0026#34;,\u0026#34;content\u0026#34;]menu:main:- identifier:categoriesname:categoriesurl:/categories/weight:10- identifier:tagsname:tagsurl:/tags/weight:20- identifier:examplename:example.orgurl:https://example.orgweight:30# Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma# pygmentsUseClasses: true# markup:# highlight:# # anchorLineNos: true# codeFences: true# guessSyntax: true# lineNos: true# style: monokai   Sample Page.md 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  ---title:\u0026#34;My 1st post\u0026#34;date:2020-09-15T11:30:03+00:00# weight: 1# aliases: [\u0026#34;/first\u0026#34;]tags:[\u0026#34;first\u0026#34;]author:\u0026#34;Me\u0026#34;# author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authorsshowToc:trueTocOpen:falsedraft:falsehidemeta:falsecomments:falsedescription:\u0026#34;Desc Text.\u0026#34;canonicalURL:\u0026#34;https://canonical.url/to/page\u0026#34;disableHLJS:true# to disable highlightjsdisableShare:falsedisableHLJS:falsehideSummary:falsesearchHidden:trueShowReadingTime:trueShowBreadCrumbs:trueShowPostNavLinks:truecover:image:\u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34;# image path/urlalt:\u0026#34;\u0026lt;alt text\u0026gt;\u0026#34;# alt textcaption:\u0026#34;\u0026lt;text\u0026gt;\u0026#34;# display caption under coverrelative:false# when using page bundles set this to truehidden:true# only hide on current single pageeditPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit link---  You can use it by creating archetypes/post.md\n1  hugo new --kind post \u0026lt;name\u0026gt;    ","permalink":"https://qutrits.github.io/posts/papermod/papermod-installation/","summary":"Read Install and Update instructions here","title":"Installation | Update"},{"content":"Intro   We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read.\n  You can find any YML to TOML converters if necessary.\n   Assets (js/css) The following is enabled by default\n minification - makes the assets size smallest as possible. bundling - bundles all the styles in one single asset fingerprint/integrity check.   Default Theme light/dark/auto 1 2 3 4  params:# defaultTheme: light# defaultTheme: darkdefaultTheme:auto# to switch between dark or light according to browser theme   Theme Switch Toggle (enabled by default) Shows icon besides title of page to change theme\nTo disable it :\n1  disableThemeToggle:true  You can refer following table for better understanding\u0026hellip;\n   defaultTheme disableThemeToggle checks local storage? checks system theme? Info     auto true No Yes only system theme    false Yes (if not-\u0026gt;2) Yes (2) switch present   dark true No No force dark only    false Yes No switch present   light true No No force light only    false Yes No switch present     Archives Layout Create a page with archive.md in content directory with following content\n1 2 3 4 5 6 7 8  . ├── config.yml ├── content/ │ ├── archives.md \u0026lt;--- Create archive.md here │ └── posts/ ├── static/ └── themes/ └── PaperMod/   and add the following to it\n1 2 3 4 5 6 7  ---title:\u0026#34;Archive\u0026#34;layout:\u0026#34;archives\u0026#34;url:\u0026#34;/archives/\u0026#34;summary:archives---  Note: Archives Layout does not support Multilingual Month Translations.\nex: archives.md\n Regular Mode (default-mode)  Home-Info Mode Use 1st entry as some Information\nadd following to config file\n1 2 3 4 5 6 7 8 9 10  params:homeInfoParams:Title:Hi there waveContent:Can be Info, links, about...socialIcons:# optional- name:\u0026#34;\u0026lt;platform\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link\u0026gt;\u0026#34;- name:\u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link2\u0026gt;\u0026#34;  ex. config.yml#L106\n Profile Mode Shows Index/Home page as Full Page with Social Links and Image\nadd following to config file\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  params:profileMode:enabled:truetitle:\u0026#34;\u0026lt;Title\u0026gt;\u0026#34;# optional default will be site titlesubtitle:\u0026#34;This is subtitle\u0026#34;imageUrl:\u0026#34;\u0026lt;image link\u0026gt;\u0026#34;# optionalimageTitle:\u0026#34;\u0026lt;title of image as alt\u0026gt;\u0026#34;# optionalimageWidth:120# custom sizeimageHeight:120# custom sizebuttons:- name:Archiveurl:\u0026#34;/archive\u0026#34;- name:Githuburl:\u0026#34;https://github.com/\u0026#34;socialIcons:# optional- name:\u0026#34;\u0026lt;platform\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link\u0026gt;\u0026#34;- name:\u0026#34;\u0026lt;platform 2\u0026gt;\u0026#34;url:\u0026#34;\u0026lt;link2\u0026gt;\u0026#34;   Search Page PaperMod uses Fuse.js Basic for seach functionality\nAdd the following to site config, config.yml\n1 2 3 4 5  outputs:home:- HTML- RSS- JSON# is necessary  Create a page with search.md in content directory with following content\n1 2 3 4 5 6 7 8  ---title:\u0026#34;Search\u0026#34;# in any language you wantlayout:\u0026#34;search\u0026#34;# is necessary# url: \u0026#34;/archive\u0026#34;# description: \u0026#34;Description for Search\u0026#34;summary:\u0026#34;search\u0026#34;---  To hide a particular page from being searched, add it in post\u0026rsquo;s fron\u0026rsquo;t matter\n1 2  ---searchHidden:true  ex: search.md\n Search Page also has Key bindings:\n Arrow keys to move up/down the list Enter key (return) or Right Arrow key to Go to highlighted page Escape key to clear searchbox and results   For Multilingual use search.\u0026lt;lang\u0026gt;.md ex. search.es.md.\nNote: Search will work only on current language, user is currently on !\nCustomizing Fusejs Options\nRefer https://fusejs.io/api/options.html for Options, Add those as shown below.\n1 2 3 4 5 6 7 8 9  params:fuseOpts:isCaseSensitive:falseshouldSort:truelocation:0distance:1000threshold:0.4minMatchCharLength:0keys:[\u0026#34;title\u0026#34;,\u0026#34;permalink\u0026#34;,\u0026#34;summary\u0026#34;,\u0026#34;content\u0026#34;]   Draft Page indication adds [draft] mark to indicate draft pages.\n Post Cover Image In post\u0026rsquo;s page-variables add :\n1 2 3 4 5 6 7  cover:image:\u0026#34;\u0026lt;image path/url\u0026gt;\u0026#34;# can also paste direct link from external site# ex. https://i.ibb.co/K0HVPBd/paper-mod-profilemode.pngalt:\u0026#34;\u0026lt;alt text\u0026gt;\u0026#34;caption:\u0026#34;\u0026lt;text\u0026gt;\u0026#34;relative:false# To use relative path for cover image, used in hugo Page-bundles  When you include images in the Page Bundle, multiple sizes of the image will automatically be provided using the HTML5 srcset field.\nTo reduce generation time and size of the site, you can disable this feature using\n1 2 3  params:cover:responsiveImages:false  To enable hyperlinks to the full image size on post pages, use\n1 2 3  params:cover:linkFullImages:true   Share Buttons on post Displays Share Buttons at Bottom of each post\nto show share buttons add\n1 2  params:ShowShareButtons:true   Show post reading time Displays Reading Time (the estimated time, in minutes, it takes to read the content.)\nTo show reading time add\n1 2  Params:ShowReadingTime:true   Show Table of Contents (Toc) on blog post Displays ToC on blog-pages\nTo show ToC add following to page-variables\n1  ShowToc:true  To keep Toc Open by default on a post add following to page-variables:\n1  TocOpen:true   BreadCrumb Navigation Adds BreadCrumb Navigation above Post\u0026rsquo;s Title to show subsections and Navigation to Home\n1 2  params:ShowBreadCrumbs:true  Can be diabled for particular page\u0026rsquo;s front-matter\n1 2 3 4  ---ShowBreadCrumbs:false---   Edit Link for Posts Add a button to suggest changes by using the file path of the post to link to a edit destination.\nFor site config use:\n1 2 3 4 5  Params:editPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit link  Can be modified for individual pages\n1 2 3 4 5 6 7  ---editPost:URL:\u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34;Text:\u0026#34;Suggest Changes\u0026#34;# edit textappendFilePath:true# to append file path to Edit link---  The example above would yield the following link for the post file posts/post-name.md: https://github.com/\u0026lt;path_to_repo\u0026gt;/content/posts/post-name.md\n   Parameter Required Default Value     editPost.URL true -   editPost.appendFilePath false false   editPost.Text false \u0026ldquo;Edit\u0026rdquo;    Since the link generated is a regular HTML anchor tag \u0026lt;a href=...\u0026gt;, you can also use other URL schemas like mailto://, e.g. URL: \u0026quot;mailto://mail@example.com?subject=Suggesting changes for \u0026quot;\n Other Posts suggestion below a post Adds a Previous / Next post suggestion under a single post\n1 2  params:ShowPostNavLinks:true   Multiple Authors To Use multiple authors for a post, in post-variables:\n1 2 3 4  ---author:[\u0026#34;Me\u0026#34;,\u0026#34;You\u0026#34;]---  To use Multiple Authors Site-wide, in config.yml:\n1 2  params:author:[\u0026#34;Me\u0026#34;,\u0026#34;You\u0026#34;]   Comments to add comments, create a html file\nlayouts/partials/comments.html\nand paste code provided by your comments provider\nalso in config add this\n1 2  params:comments:true  read more about this hugo-comments\n AccessKeys 1 2 3 4 5  c - ToC Open/Close g - Go To Top h - Home (according to current lang) t - Theme toggle / - Jumps to search page if in menu   What\u0026rsquo;s AccessKeys ?\n Enhanced SEO Enabled only when env: production\n Rich Results/Snippets Support  Twitter Cards Support  The Twitter Cards metadata, except twitter:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The twitter:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. 1 2 3  images:- image_01.png- image_02.png   Finally, if neither of those are provided, twitter:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name.  OpenGraph support  The OpenGraph metadata, except og:image should not require additional configuration, since it is generated from metadata that you should already have (for instance the page title and description). The og:image uses the Post Cover Image, if present. In the absence of a cover images, the first image from the images frontmatter (a list) is used. 1 2 3  images:- image_01.png- image_02.png   Finally, if neither of those are provided, og:image comes from the first Page Bundle image with feature in the name, with a fallback to the first image with cover or thumbnail in the name. For pages, you can also add audio (using frontmatter audio: filename.ext) and/or videos. 1 2 3  videos:- filename01.mov- filename02.avi     Multilingual Support  Misc Scroll-Bar themed (by default) Smooth Scroll between in-page links (by default) Scroll-to-Top Button (by default) 1  Displays a Scroll-to-Top button in right-bottom corner   Google Analytics integration Syntax highlighting RSS feeds ","permalink":"https://qutrits.github.io/posts/papermod/papermod-features/","summary":"Learn About All Features in PaperMod","title":"Features"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://qutrits.github.io/posts/markdown-syntax.fr/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide For L2"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn: ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://qutrits.github.io/posts/markdown-syntax.fa/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide For RTL"},{"content":"🍑 타이머\npublic class Timer : MonoBehaviour { private Coroutine curTimer; public void StartTimer(int time, Action\u0026lt;float\u0026gt; onValueChanged) { //진행되던 타이머가 있다면 멈추고 새로 시작 if (curTimer != null) { StopCoroutine(curTimer); } curTimer = StartCoroutine(CoStartTimer(time, onValueChanged)); } //타이머를 진행할 시간, 시간이 바뀔때마다 어떠한 행동을할건지 IEnumerator CoStartTimer(int time, Action\u0026lt;float\u0026gt; onValueChanged) { float timer = 0; while (true) { //타이머가 지정된 시간을 넘기면 break! if (timer \u0026gt;= time) { break; } //시간을 더해주자! timer += Time.deltaTime; yield return null; //남은 시간을 보내주기 onValueChanged(time - timer); } //타이머가 끝나면 코루틴을 null curTimer = null; } }  💚 deltaTime 사용 이유!\n 지난 프레임이 완료되는 데 까지 걸린 시간을 나타내며, 단위는 초를 사용합니다.(읽기전용) 사용자의 프레임 률(frame rate)을 독립적으로 적용하기 위해서 사용합니다.\n 즉! 사용자의 각자 프레임률이 다르기 때문에 프레임 카운트로 타이머를 만든다면 각 사용자의 타이머는 시간이 모두 다르다. 하지만 deltaTime을 쓴다면, 같은 결과값을 얻을 수 있다!\n🍑 스킬아이콘\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91  public class SpellIcon : MonoBehaviour { //연출에 사용할 커브! [SerializeField] private AnimationCurve ease; //스킬 아이콘 이미지  private Image img_icon; //쿨타임이 돌 때 이미지(딤드)  private Image img_cooltime; //쿨타임을 표시해 줄 텍스트  private Text txt_timer; //타이머를 가지고 있자!  private Timer timer; //임시 쿨타임 적용  private int cooltime = 5; private void Awake() { foreach (var img in GetComponentsInChildren\u0026lt;Image\u0026gt;()) { if (img.name == \u0026#34;Image_Spell\u0026#34;) { img_icon = img; } else if (img.name == \u0026#34;Image_CoolTime\u0026#34;) { img_cooltime = img; } } var btn = img_icon.gameObject.AddComponent\u0026lt;Button\u0026gt;(); btn.onClick.AddListener(OnClickSpell); timer = GetComponent\u0026lt;Timer\u0026gt;(); txt_timer = GetComponentInChildren\u0026lt;Text\u0026gt;(); } //바깥에서 불러줘야해!  //useAble : 바로 사용이 가능한지?  public void Initialize(Sprite sprite, int cooltime, bool useAble = true) { img_icon.sprite = sprite; this.cooltime = cooltime; //바로사용이 불가능하다면 쿨타임을 실행!  OnTimeChanged(useAble ? cooltime : 0); } void UseSpell() { img_cooltime.raycastTarget = true; timer.StartTimer(cooltime, OnTimeChanged); } void OnClickSpell() { //어디론가 보내서 스킬을 발동되도록 해야겠지 ?  Debug.Log(\u0026#34;아 스킬 발동ㅋ\u0026#34;); ClickAnimation();//연출!  UseSpell(); } void ClickAnimation() { //클릭시 커졌다가 다시 돌아오는 핑퐁형태의 연출을 추가!  transform.Scale(Vector3.one, Vector3.one * 1.1f, 0.1f).SetEase(ease,true).Play(); } //타임이 변경될 때 마다 업데이트를 시켜줌  void OnTimeChanged(float time) { UpdateCooltimeImage(time); UpdateTimerText(time); } void UpdateCooltimeImage(float time) { if (time \u0026lt;= 0) { //쿨타임이 끝났으니 아이콘을 누를 수 있도록 해당 이미지를 raycastTarget을 꺼줌.  img_cooltime.raycastTarget = false; } if (cooltime \u0026gt; 0) { img_cooltime.fillAmount = time / cooltime; } else { img_cooltime.fillAmount = 0; } } void UpdateTimerText(float time) { txt_timer.text = time \u0026lt;= 0 ? string.Empty : txt_timer.text = Math.Ceiling(time).ToString(); } }   스킬 아이콘을 초기화해주고 정보를 넣어주는 것은 원래 해당 클래스 바깥에서 관리를 해주어야 할 것이다. 이 스킬 아이콘들의 상태를 관리하고 이벤트들을 실제로 사용하는 곳으로 전달하는 역할의 매니저 클래스가 필요하다. 다음에 이 클래스를 관리하는 클래스도 추가해보겠다. 이 클래스는 실 데이터(스킬의 데미지, 타겟, 효과 등\u0026hellip;)를 다루거나 그 데이터를 기반으로 행위를 하는 것보다 사용자의 눈에 보여지는 부분만 처리하기 위해 존재한다.(UI적 부분만)\n","permalink":"https://qutrits.github.io/posts/2021_12_06_03/","summary":"🍑 타이머\npublic class Timer : MonoBehaviour { private Coroutine curTimer; public void StartTimer(int time, Action\u0026lt;float\u0026gt; onValueChanged) { //진행되던 타이머가 있다면 멈추고 새로 시작 if (curTimer != null) { StopCoroutine(curTimer); } curTimer = StartCoroutine(CoStartTimer(time, onValueChanged)); } //타이머를 진행할 시간, 시간이 바뀔때마다 어떠한 행동을할건지 IEnumerator CoStartTimer(int time, Action\u0026lt;float\u0026gt; onValueChanged) { float timer = 0; while (true) { //타이머가 지정된 시간을 넘기면 break! if (timer \u0026gt;= time) { break; } //시간을 더해주자! timer += Time.","title":"타이머를 이용해 스킬아이콘을 만들어보자!"},{"content":"애니메이션 커브에 대해서 조금 더 알 수 있었던 핑퐁 기능 만들기였다.\n🍑 핑퐁 기능 추가!!!!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  public static Tween SetEase(this Tween tween, AnimationCurve ease, bool pingpong = false) //ping pong: 다시 돌아오는 형태의 애니메이션 { if (!tween.IsPlaying) //트윈이 플레이 중이지 않을 때 수정!  { if (pingpong)//핑퐁을 한다면  { Keyframe[] keyframes = new Keyframe[ease.length]; //애니메이션 커브의 키 프레임만큼 키프레임 배열 생성  for (int i = 0; i \u0026lt; ease.length; i++) { //일대일 매칭을 해서  keyframes[i] = ease.keys[i]; //정해진 기간내에 from으로 와야함.  //반절은 to로 반절은 from로 가야하기때문에 2로 나누어 줌!  keyframes[i].time = keyframes[i].time / 2; } //새로운 커브를 생성해 이전 ease와 교체  ease = new AnimationCurve(keyframes); //핑퐁으로 모드를 변경!  ease.postWrapMode = WrapMode.PingPong; } tween.Ease = ease; } else { Debug.Log(\u0026#34;tween is playing\u0026#34;); } return tween; }   💚 ease.Evaluate(time / duration) 를 통해서 총 애니메이션 기간에 대한 현재 애니메이션 타임의 값을 ease에서 얻을 수 있다. 이 값을 대상이 Transform(position, scale, rotate)이든지 MaskAbleGraphic(color, alpha), CanvasGroup(alpha)이든지 간에 값을 정해줄 수 있다.\n나중에 애니메이션커브만 따로 포스팅을 해보겠다!\n","permalink":"https://qutrits.github.io/posts/2021_12_06_02/","summary":"애니메이션 커브에 대해서 조금 더 알 수 있었던 핑퐁 기능 만들기였다.\n🍑 핑퐁 기능 추가!!!!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  public static Tween SetEase(this Tween tween, AnimationCurve ease, bool pingpong = false) //ping pong: 다시 돌아오는 형태의 애니메이션 { if (!tween.IsPlaying) //트윈이 플레이 중이지 않을 때 수정!","title":"Tween 만들기 프로젝트 근황"},{"content":"상속이 뭐야? 🧐 상속은 확장의 개념이다. 추상클래스, 일반클래스 모두 상속을 통해 특정 객체의 개념을 확장시킬 수 있다.(인터페이스의 경우 기능확장이라는 말이 좀 더 어울리는 것 같다.) 인터페이스와 추상클래스는 이전 포스트에서 다루었으니 일반클래스를 예시로 들겠다.\n💚 예시 오크라는 객체가 있다고 하자. 이 오크라는 객체는 마법사 오크가 될수도, 전사 오크, 궁수 오크 등이 될 수 있다. 이런 오크들을 구현할 때 상속을 사용한다. 직업이 있는 오크 모두 하나의 오크라는 객체를 상속받을 수 있는 것이다. 일반클래스의 상속은 추상클래스나 인터페이스를 상속받는 것과 다르게 부모클래스도 인스턴스할 수 있다. 즉, 아무렂 직업이 없는 일반 오크(부모클래스)도 존재할 수 있고, 이 오크를 기반으로 다양한 직업을 가진 오크(자식클래스)도 존재할 수 있다.\n🍑 위의 내용을 바탕으로 코드를 만들어 보자! 🍑 일반클래스, 추상클래스, 인터페이스 모두 활용해보자!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122  public abstract class Monster //몬스터라는 분류! { private int maxHp; private int maxMp; private int hp; private int mp; private bool isAbleSkill; public bool IsAbleSkill { get =\u0026gt; mp \u0026gt; 0; private set =\u0026gt; isAbleSkill = value; } private bool IsAlive=\u0026gt; hp \u0026gt; 0; public int Hp { get =\u0026gt; hp; set { var _hp = hp + value; if (_hp \u0026gt; maxHp) { hp = maxHp; } else if (_hp \u0026lt;= 0) { Die(); } else { hp = _hp; } } } public int Mp { get =\u0026gt; mp; set { var _mp = mp + value; if (_mp \u0026gt; maxMp) { mp = maxMp; } else if (_mp \u0026lt;= 0) { mp = 0; } else { mp = _mp; } } } protected Monster(int maxHp, int maxMp)//abstract 클래스의 생성자는 항상 protected로!  { this.maxHp = maxHp; this.maxMp = maxMp; hp = maxHp; mp = maxMp; } public abstract void UseSkill(); public abstract void Die(); public void SetEnableUseSkill(bool able) { isAbleSkill = able; } } public class Orc : Monster { public override void UseSkill() { if (IsAbleSkill) { Skill(); } } public Orc(int maxHp, int maxMp) : base(maxHp,maxMp) { } protected virtual void Skill() { Console.WriteLine(\u0026#34;일반오크 스킬 발동!\u0026#34;); } public override void Die() { Console.WriteLine(\u0026#34;오크 죽음!\u0026#34;); } } public class WizardOrc : Orc, IFly { public WizardOrc(int maxHp, int maxMp) : base(maxHp,maxMp) { } protected override void Skill() //부모의 함수를 오버라이딩 하여 자신에게 알맞은 함수를 실행함  { Console.WriteLine(\u0026#34;마법사 오크 스킬 발동!\u0026#34;); } public void Fly() { Console.WriteLine(\u0026#34;휘익~ 마법사 오크 난다!\u0026#34;); } } public class KnightOrc : Orc { public KnightOrc(int maxHp, int maxMp) : base(maxHp,maxMp) { } protected override void Skill() { Console.WriteLine(\u0026#34;전사오크 스킬 발동!\u0026#34;); } } public class ArcherOrc : Orc { public ArcherOrc(int maxHp, int maxMp) : base(maxHp,maxMp) { } protected override void Skill() { Console.WriteLine(\u0026#34;궁수오크 스킬 발동!\u0026#34;); } }   상속의 특징은? 🧐  자식클래스가 부모클래스의 필드와 메소드를 모두 가지고 있다. 부모클래스에서 private으로 선언되어있는 요소들은 자식클래스라도 접근이 불가능하다.(가지고는 있음!) 부모클래스에서 protected로 선언되어있는 요소는 자식클래스만 접근이 가능하다. 부모클래스이 메소드를 virtual/override 를 통해 자식클래스에서 재정의 할 수 있다. interface를 제외한 모든 상속은 다중상속이 불가능하다.  ","permalink":"https://qutrits.github.io/posts/2021_12_06_01/","summary":"상속이 뭐야? 🧐 상속은 확장의 개념이다. 추상클래스, 일반클래스 모두 상속을 통해 특정 객체의 개념을 확장시킬 수 있다.(인터페이스의 경우 기능확장이라는 말이 좀 더 어울리는 것 같다.) 인터페이스와 추상클래스는 이전 포스트에서 다루었으니 일반클래스를 예시로 들겠다.\n💚 예시 오크라는 객체가 있다고 하자. 이 오크라는 객체는 마법사 오크가 될수도, 전사 오크, 궁수 오크 등이 될 수 있다. 이런 오크들을 구현할 때 상속을 사용한다. 직업이 있는 오크 모두 하나의 오크라는 객체를 상속받을 수 있는 것이다. 일반클래스의 상속은 추상클래스나 인터페이스를 상속받는 것과 다르게 부모클래스도 인스턴스할 수 있다.","title":"inheritance: 상속"},{"content":"오늘은 추상 클래스에 대해 알아보쟈!\nabstract class(추상클래스)가 뭐야? 🧐 인터페이스가 Can Do를 알려주는 역할이라면 추상클래스는 분류(category)를 알려주는 클래스다.\n💚 예시 (내가 이해한 방식) 인터페이스에서 이야기했던 예시를 이어가자면, 앵무새와 참새, 펭귄 그리고 슈가 글라이더는 각자 객체를 가질 수 있다. 하지만 앵무새,참새 그리고 펭귄을 포함하는 조류, 슈가 글라이더를 포함하는 포유류라는 것은 객체가 없는, 추상적인 분류(category)의 개념이다. 추상클래스 안에 추상메소드는 인터페이스와 같은 역할이라고 생각하면된다. 즉, \u0026ldquo;이러한 분류(추상클래스)에 속하는 객체들은 이러한(추상메소드)것에 반드시 반응해야한다.\u0026rdquo; 라는 계약이 생긴다. 🍑 위의 내용을 추가로 코드를 수정해보자\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  public abstract class Animal//동물이라는 카테고리를 표현 { private bool isAlive = true;//추상클래스는 필드를 가질 수 있다.  public abstract void Eat();//추상메소드: 자식클래스에서 모두 구현을 해주어야함!  public virtual void Die()//일반 메소드: 추상클래스는 일반 메소드 또한 가질 수 있다.  { isAlive = false; } } public abstract class Birds : Animal//동물이라는 카테고리 속 조류라는 카테고리 { protected Birds(Beak beak) { this.beak = beak; } public Beak beak { get; private set; } } public class Sparrow : Birds, IFly//조류에 속하는 참새 객체 { public Sparrow(Beak beak) : base(beak) { } public void Fly() { Console.WriteLine(\u0026#34;포로록~ 참새 난다~\u0026#34;); } public override void Eat() { Console.WriteLine(\u0026#34;참새 쌀알 먹는다. 콕콕!\u0026#34;); } } public class Parrot : Birds, IFly//조류에 속하는 앵무새 객체 { public Parrot(Beak beak) : base(beak) { } public void Fly() { Console.WriteLine(\u0026#34;푸드덕~ 앵무새 난다~\u0026#34;); } public override void Eat() { Console.WriteLine(\u0026#34;츄릅~ 앵무새 메뚜기 먹는다!\u0026#34;); } }   abstract class(추상클래스)의 특징은? 🧐  클래스 안에 추상메소드가 하나라도 존재한다면, 그 클래스는 반드시 추상클래스여야한다. 추상클래스: abstract class [\u0026quot;클래스 이름\u0026quot;], 추상메소드: abstract [\u0026quot;반환타입\u0026quot;] [\u0026quot;메소드 이름\u0026quot;]( [\u0026quot;파라미터\u0026quot;] )로 표현한다. 추상메소드는 내부가 구현되지않은 상태여야한다. (이전에 포스팅했던 인터페이스가 추상메소드만으로만 이루어진 것) 접근한정자를 정해주지않으면 private 디폴트 값이다. 필드와 일반메소드 모두 가지고 있을 수 있다.(인터페이스와 가장 큰 차이점 중 하나) 다른 일반 클래스와 마찮가지로 다중상속이 불가능하다. 인터페이스와 마찮가지로 인스턴스가 불가능하다.  ** 다음 포스팅은 일반 클래스와 상속에 대해서 다루겠다!\n","permalink":"https://qutrits.github.io/posts/2021_12_05_01/","summary":"오늘은 추상 클래스에 대해 알아보쟈!\nabstract class(추상클래스)가 뭐야? 🧐 인터페이스가 Can Do를 알려주는 역할이라면 추상클래스는 분류(category)를 알려주는 클래스다.\n💚 예시 (내가 이해한 방식) 인터페이스에서 이야기했던 예시를 이어가자면, 앵무새와 참새, 펭귄 그리고 슈가 글라이더는 각자 객체를 가질 수 있다. 하지만 앵무새,참새 그리고 펭귄을 포함하는 조류, 슈가 글라이더를 포함하는 포유류라는 것은 객체가 없는, 추상적인 분류(category)의 개념이다. 추상클래스 안에 추상메소드는 인터페이스와 같은 역할이라고 생각하면된다. 즉, \u0026ldquo;이러한 분류(추상클래스)에 속하는 객체들은 이러한(추상메소드)것에 반드시 반응해야한다.\u0026rdquo; 라는 계약이 생긴다.","title":"abstract class: 추상클래스"},{"content":"알고리즘 공부 백준 11068 🧐 회문인 수 👉문제 어떤 수를 왼쪽부터 읽어도, 오른쪽부터 읽어도 같을 때 이 수를 회문인 수라고 한다. 예를 들어, 747은 회문인 수이다. 255도 회문인 수인데, 16진수로 표현하면 FF이기 때문이다. 양의 정수를 입력받았을 때, 이 수가 어떤 B진법 (2 ≤ B ≤ 64)으로 표현하면 회문이 되는 경우가 있는지 알려주는 프로그램을 작성하시오. B진법이란, 한 자리에서 수를 표현할 때 쓸 수 있는 수의 가짓수가 B라는 뜻이다. 예를 들어, 십진법에서 B는 10이다.\n👉입력 입력 데이터는 표준입력을 사용한다. 입력은 T개의 테스트 데이터로 구성된다. 입력의 첫 번째 줄에는 테스트 데이터의 수를 나타내는 정수 T가 주어진다. 각 테스트 데이터는 64 이상 1,000,000 이하인 하나의 정수로 주어진다.\n👉출력 출력은 표준출력을 사용한다. 하나의 테스트 데이터에 대한 답을 하나의 줄에 출력한다. 각 테스트 데이터에 대해, 주어진 수가 어떤 B진법 (2 ≤ B ≤ 64)으로 표현하여 회문이 될 수 있다면 1을, 그렇지 않다면 0을 출력한다.\n🍑풀이\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  using System; using System.Collections.Generic; namespace Algorithm14 { class Baekjoon11068 { static void Main(string[] args) { var t = int.Parse(Console.ReadLine()!); var arr = new int[t]; for (int i = 0; i \u0026lt; t; i++) { arr[i] = int.Parse(Console.ReadLine()!); } for (int i = 0; i \u0026lt; t; i++) { int result = 0; for (int j = 2; j \u0026lt;= 64; j++) { var convert = ConvertJ(arr[i], j); result = Check(convert); if (result == 1) { break; } } Console.WriteLine(result); } int Check(List\u0026lt;int\u0026gt; list)//회문인지 체크  { for (int i = 0; i \u0026lt; list.Count / 2; i++) { if (list[i] != list[list.Count - i - 1]) { return 0; } } return 1; } //진법 변환(사실 여기서 뒤집어주어야 알맞은 값이 나오지만 사실 이 문제에서는 상관이없기때문에 뒤집지않았다.)  List\u0026lt;int\u0026gt; ConvertJ(int value, int j) { List\u0026lt;int\u0026gt; list = new List\u0026lt;int\u0026gt;(); while (value / j \u0026gt; 0) { list.Add(value % j); value /= j; } list.Add(value); return list; } } } }   문제풀러가기\n","permalink":"https://qutrits.github.io/posts/2021_11_26_01/","summary":"알고리즘 공부 백준 11068 🧐 회문인 수 👉문제 어떤 수를 왼쪽부터 읽어도, 오른쪽부터 읽어도 같을 때 이 수를 회문인 수라고 한다. 예를 들어, 747은 회문인 수이다. 255도 회문인 수인데, 16진수로 표현하면 FF이기 때문이다. 양의 정수를 입력받았을 때, 이 수가 어떤 B진법 (2 ≤ B ≤ 64)으로 표현하면 회문이 되는 경우가 있는지 알려주는 프로그램을 작성하시오. B진법이란, 한 자리에서 수를 표현할 때 쓸 수 있는 수의 가짓수가 B라는 뜻이다. 예를 들어, 십진법에서 B는 10이다.","title":"AlgorithmStudy_백준 11068"},{"content":"이전 포스트에서는 드로우콜 자체에 대해 알아보았다면, 이번 포스트에서는 드로우콜을 줄이기 위해 알아야하는 것과 드로우콜을 줄이는 방법에 대해 알아보겠다.\nBatch, Batching이 뭐야? 🧐  Batch: 이전 포스트에서 언급했던 DP Call과 render state change들을 합친 넓은 의미의 드로우콜. Batching: 드로우콜을 줄이는 작업(어떠한 조건 아래 다수의 Batch를 하나로 만드는 작업).  💚Batching 세부 설명\nProject Setting \u0026gt; Player 에서 사용이 체크가 되어있는지 확인.  Static Batching: Static 플래그가 체크되어있는 정적인 오브젝트에 적용 됨.   적용 방법  버텍스 연산을 런타임에 수행하지 않기때문에 Dynamic Batching 보다 효율적. 같은 머티리얼을 사용하는 메쉬들을 렌더링할 때 드로우콜을 줄일 수 있다.(동일한 머티리얼 인스턴스여야 함) 배경 같은 요소(트랜스폼 등이 바뀌지 않는 오브젝트)에 적용해주기에 적합함.  ⚠️주의⚠️\n메모리가 추가로 필요함. 해당되는 오브젝트들은 처음부터 Scene에 존재해야 함. 동일한 머터리얼을 사용할 지라도 스크립트에서 Renderer.material.color = Color.red;처럼 머터리얼의 속성을 변경한다면 복사본이 생성되기 때문에 적용되지않는다(Renderer.sharedMaterial사용으로 해결가능).\nDynamic Batching: Static 플래그가 체크되어있지않은 모든 오브젝트에 적용 됨.   매 프레임, 오브젝트들의 버텍스 정보를 합쳐 버텍스 버퍼와 인덱스 버퍼에 담아 GPU가 렌더링 함. 따라서 매 프레임마다 오버헤드가 발생. 그러나 드로우콜을 줄임으로 전체적인 성능 향상.  ⚠️주의⚠️\nSkinned Mesh에는 적용이 되지않음.\n버텍스가 너무 많은 메쉬에는 적용이 되지않음.\n2D 환경에서는 드로우콜을 어떻게 줄이나요? 🧐  Sprite Mode: Multiple 사용. Sprite Atlas 이용.  참고자료: 유니티 그래픽스 최적화 스타트업\n","permalink":"https://qutrits.github.io/posts/2021_11_25_03/","summary":"이전 포스트에서는 드로우콜 자체에 대해 알아보았다면, 이번 포스트에서는 드로우콜을 줄이기 위해 알아야하는 것과 드로우콜을 줄이는 방법에 대해 알아보겠다.\nBatch, Batching이 뭐야? 🧐  Batch: 이전 포스트에서 언급했던 DP Call과 render state change들을 합친 넓은 의미의 드로우콜. Batching: 드로우콜을 줄이는 작업(어떠한 조건 아래 다수의 Batch를 하나로 만드는 작업).  💚Batching 세부 설명\nProject Setting \u0026gt; Player 에서 사용이 체크가 되어있는지 확인.  Static Batching: Static 플래그가 체크되어있는 정적인 오브젝트에 적용 됨.   적용 방법  버텍스 연산을 런타임에 수행하지 않기때문에 Dynamic Batching 보다 효율적.","title":"Draw Call: 드로우콜(2)"},{"content":"오늘 비대면 면접을 보았는데, 이전 프로젝트에서 드로우콜을 줄이려는 노력을 했냐고 물어보셨다.나는 딱히 드로우콜에 대해서 생각을 해본 적이 별로 없어서 없다고 말했지만, 이 부분에 대해 좀 더 알 필요가 있다고 생각했다. 그래서 오늘의 공부는 드로우콜!\nDraw Call이 뭐야? 🧐  간단 요약 정의: CPU가 GPU에 오브젝트를 그리라는 명령을 호출하는 것.  💚세부 설명\n 오브젝트가 실제 화면에 렌더링 되려면 CPU -\u0026gt; GPU 정보 전달 필요함. 정보: 메시, 텍스처, 쉐이더, 트랜스폼, 알파블렌딩 여부 등이 존재. CPU 메모리에서 GPU 메모리로 위의 정보 데이터들의 복사가 이루워짐.(게임 수행 내내 데이터는 메모리에 상주) GPU에는 렌더링 할 것의 상태 정보를 담는 테이블이 존재.(Render States: GPU 메모리의 데이터 위치 정보 보유) 새로운 오브젝트를 그릴 때 마다 상태 변경 CPU -\u0026gt; GPU로 상태 변경 명령을 내림.(변경이 필요한 부분만) CPU -\u0026gt; GPU로 상태 변경 명령(render state change) + 렌더 명령(Draw Primitive Call(DP Call)) = 드로우콜 CPU -\u0026gt; 커맨드 버퍼(Command Buffer) -\u0026gt; GPU 순으로 명령이 이루워짐.  Draw Call이 많으면 무엇이 문제일까? 🧐  명령을 GPU에서 사용하는 신호로 변환해야하기 때문에 CPU에 부담이 된다.(CPU 오버헤드)  어떻게 해야할까? 🧐  렌더링에 관련된 작업들을 별도의 쓰레드에서 수행하게한다.(Multithreaded Rendering)  드로우콜을 줄인다.  ⚠️주의⚠️\n드로우콜을 줄이는 데에는 텍스쳐의 크기 또는 폴리곤의 수를 줄이는 것과 관련이 없다!\nDraw Call은 어떻게 발생되는 걸까? 🧐 보통 오브젝트를 그릴 때 Mesh가 1개, Material이 1개일 경우 드로우콜이 한 번 일어난다.\n Mesh가 여러 개인 경우 Material이 여러 개인 경우 Shader에 따라서\u0026hellip;   ⚠️주의⚠️\n수많은 상태 변경들을 포함하기 때문에 드로우콜의 비용은 개당으로 계산하기 어렵다.\n참고자료: 유니티 그래픽스 최적화 스타트업\n","permalink":"https://qutrits.github.io/posts/2021_11_25_02/","summary":"오늘 비대면 면접을 보았는데, 이전 프로젝트에서 드로우콜을 줄이려는 노력을 했냐고 물어보셨다.나는 딱히 드로우콜에 대해서 생각을 해본 적이 별로 없어서 없다고 말했지만, 이 부분에 대해 좀 더 알 필요가 있다고 생각했다. 그래서 오늘의 공부는 드로우콜!\nDraw Call이 뭐야? 🧐  간단 요약 정의: CPU가 GPU에 오브젝트를 그리라는 명령을 호출하는 것.  💚세부 설명\n 오브젝트가 실제 화면에 렌더링 되려면 CPU -\u0026gt; GPU 정보 전달 필요함. 정보: 메시, 텍스처, 쉐이더, 트랜스폼, 알파블렌딩 여부 등이 존재.","title":"Draw Call: 드로우콜(1)"},{"content":"유니티에서 쓸 Tween을 만들고 있는 중이다.Tween에서 여러가지 클래스를 처리하고 싶어서 Generic class를 활용하기로 하였다.\nGeneric class가 뭐야? 🧐  일반적으로 클래스를 정의할 때, 클래스 내의 모든 데이타 타입을 지정해 주게 된다. 하지만 어떤 경우는 클래스의 거의 모든 부분이 동일한데 일부 데이타 타입만이 다른 경우가 있을 수 있다.이런 경우 C#의 제네릭 타입(Generic Type)을 사용할 수 있는데, 제네릭 타입에서는 int, float, double 같은 데이타 요소 타입을 확정하지 않고 이 데이타 타입 자체를 타입파라미터(Type Parameter)로 받아들이도록 클래스를 정의한다.\n (c++ 의 템플릿과 비슷!)\n왜 사용하는거야? 🧐  기능이 같은 클래스를 타입만 바꾸어 새롭게 구현할 필요없이 Generic class로 구현하면 여러 타입으로 하나의 클래스를 활용할 수 있다. 대표적 예시로 List\u0026lt;T\u0026gt;가 있다.  어떻게 사용해야해? 🧐  public class [ClassName]\u0026lt;T\u0026gt; 로 선언. 여러개의 타입을 사용하고 싶을 때는 \u0026lt;T1, T2 ...\u0026gt; 이런 식으로 나열하면 된다. 제네릭 타입에 제약을 두고 싶을 경우 where T : [제약조건]과 같이 마지막에 조건을 붙인다.  ⚠️주의⚠️ 만약 제네릭 클래스가 MonoBehaviour를 상속하고 있을 때, GameObject에 AddComponent를 바로 할 경우 null이 된다. 각 제네릭 타입마다 class를 새로 생성 후 가능하다.\n⛔ 옳지않은 예시\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  using System; using UnityEngine; namespace MyTween { public class Tween\u0026lt;T1, T2\u0026gt;: MonoBehaviour { private T1 target; private T2 v_end; } public static class TweenManager { public static Tween\u0026lt;Transform, Vector3\u0026gt; Move(this Transform tr, Vector3 to, float duration) { Tween\u0026lt;Transform, Vector3\u0026gt; tween = tr.gameObject.AddComponent\u0026lt;Tween\u0026lt;Transform, Vector3\u0026gt;\u0026gt;();//null 반환!!  return tween; } } }   💚 옳은 예시\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  using System; using UnityEngine; namespace MyTween { public class TweenVector3 : Tween\u0026lt;Transform, Vector3\u0026gt; { } public static class TweenManager { public static Tween\u0026lt;Transform, Vector3\u0026gt; Move(this Transform tr, Vector3 to, float duration) { TweenVector3 tween = tr.gameObject.AddComponent\u0026lt;TweenVector3\u0026gt;();//성공적인 반환!!  return tween; } } }   ","permalink":"https://qutrits.github.io/posts/2021_11_25_01/","summary":"유니티에서 쓸 Tween을 만들고 있는 중이다.Tween에서 여러가지 클래스를 처리하고 싶어서 Generic class를 활용하기로 하였다.\nGeneric class가 뭐야? 🧐  일반적으로 클래스를 정의할 때, 클래스 내의 모든 데이타 타입을 지정해 주게 된다. 하지만 어떤 경우는 클래스의 거의 모든 부분이 동일한데 일부 데이타 타입만이 다른 경우가 있을 수 있다.이런 경우 C#의 제네릭 타입(Generic Type)을 사용할 수 있는데, 제네릭 타입에서는 int, float, double 같은 데이타 요소 타입을 확정하지 않고 이 데이타 타입 자체를 타입파라미터(Type Parameter)로 받아들이도록 클래스를 정의한다.","title":"Generic: 제너릭 클래스"},{"content":"C# 공부 string/StringBuilder🤔 ✨string  Immutable(불변) 변수. 값이 아닌 참조 변수. 내부적으로 문자열을 관리하는 버퍼를 가지고 있지않다. 대신 이를 참조하고 있다. string마다 새로운 클래스가 생성이 된다.  1 2 3 4  string a = \u0026#34;안녕\u0026#34; + \u0026#34;하세요\u0026#34;; //\u0026#34;안녕\u0026#34; \u0026#34;하세요\u0026#34; -\u0026gt; 각각의 string class 생성. //a string class 생성. //총 3개의 string class가 생성된다. -\u0026gt; 즉 garbage가 많이 생긴다.   ✨StringBuilder  내부적으로 버퍼를 가지고 있다. 조합이 가능하다. 즉, 조합할 때마다 새롭게 class를 생성하지않는다. 조합한 것을 string으로 반환이 가능하다. 길이가 충분히 길고 길이를 모를 때 사용하는 것이 바람직하다.  1 2 3 4 5 6  StringBuilder sb1 = new StringBuilder(\u0026#34;Hello\u0026#34;); //생성할 당시에 바로 넣기가 가능하다. StringBuilder sb2 = new StringBuilder(100); //버퍼공간을 미리 할당하는 것이 가능하다. //미리 할당을 해놓으면 크기가 넘어가는 데이터가 들어오기 전까지는 Append를 사용할 시 추가 공간을 마련하지않아도 되어 조금 더 빠르다.    🌟🌟 StringBuilder가 편리함에도 string이 필요한 이유  값의 변형없이 사용되는 string 에 대한 참조만이 필요할 경우.  1 2 3 4 5 6 7 8  string a = \u0026#34;immutable\u0026#34;; //s1, s2, s3는 내부적으로 버퍼를 가지고 있지않기 때문에 a와 같은 버퍼를 참조한다. //만약, string이 StringBuilder처럼 작동을 한다면... //s1, s2, s3는 내부적으로 버퍼를 가지고 있어야하고 이는 a의 내부 버퍼를 복사한 값을 가지고 있을 것이다. =\u0026gt; 메모리 낭비! string s1 = a; string s2 = b; string s3 = c;    멀티스레드 환경에서 string이 StringBuilder보다 안전하다.  1 2 3 4 5 6 7 8  string s = \u0026#34;a\u0026#34; + \u0026#34;b\u0026#34; + \u0026#34;c\u0026#34;; //string을 조합할 때는 연산의 최소 단위인 원자적 연산을 하기 때문에 스레드가 연산 중간에 간섭할 수 없어 값이 변할 위험이 없다.  StringBuilder sb = new StringBuilder(); sb.Append(\u0026#34;a\u0026#34;); sb.Append(\u0026#34;b\u0026#34;); sb.Append(\u0026#34;c\u0026#34;); //StringBuilder로 조합할 경우에는 원자적 연산이 아니기 때문에 멀티스레드 환경에서 값이 변형될 위험이 있다.   ","permalink":"https://qutrits.github.io/posts/2021_11_19_01/","summary":"C# 공부 string/StringBuilder🤔 ✨string  Immutable(불변) 변수. 값이 아닌 참조 변수. 내부적으로 문자열을 관리하는 버퍼를 가지고 있지않다. 대신 이를 참조하고 있다. string마다 새로운 클래스가 생성이 된다.  1 2 3 4  string a = \u0026#34;안녕\u0026#34; + \u0026#34;하세요\u0026#34;; //\u0026#34;안녕\u0026#34; \u0026#34;하세요\u0026#34; -\u0026gt; 각각의 string class 생성. //a string class 생성. //총 3개의 string class가 생성된다. -\u0026gt; 즉 garbage가 많이 생긴다.   ✨StringBuilder  내부적으로 버퍼를 가지고 있다. 조합이 가능하다. 즉, 조합할 때마다 새롭게 class를 생성하지않는다.","title":"C#_string_StringBuilder"},{"content":" 유니티에서 여러가지 연습을 하려고 생각하고 있었을 때, 나만의 tween을 만들어 보고싶다고 생각했다. DoTween을 사용할 때 여러 함수들이 transform, image 등에서 부터 바로 DoTween 함수를 사용할 수 있었던 것이 기억에 남았다.\n  나도 이런식으로 바로바로 접근할 수 있으면 좋겠다고 생각을 해서 방법을 찾아보니, Extenstion Method 를 이용하면 되는 것!\n Extenstion Method가 뭐야? 🧐  특수한 종류의 Static 메서드. 다른 클래스의 인스턴스 메서드인 것 처럼 사용되는 기능. 클래스, 구조체, 인터페이스 등에 적용 가능.  왜 사용하는거야? 🧐  인스턴스 메서드를 추가하려면 해당 클래스 안에 메서드를 추가해야한다. 하지만 접근이 불가한 클래스라면 ??? Extenstion Method를 사용하자!  어떻게 사용해야해? 🧐  static class static method public Extenstion Method는 첫번째 파라미터로 반드시 클래스명을 지정해야 함  1 2 3 4 5 6 7 8 9 10 11 12  public static void Function(this T parm) public static void Function(this T parm) public static void Function(this T parm) public static void Function(this T parm) public static void Function(this T parm) public static void Function(this T parm) public static void Function(this T parm) public static void Function(this T parm)    이 파라미터 앞에 반드시 this 키워드를 추가할 것! 만약 Extenstion Method 사용 후 또 다른 확장 메소드를 쓰고 싶을 시 this로 들어왔던 첫 파라미터를 반환 해주면 된다.  🍑 예시: tween 만들기 프로젝트에 일부를 이용했다..ㅎㅎ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  using System.Collections; using UnityEngine; namespace MyTween { public static class Tween { public static Transform Move(this Transform tr, Vector3 to, float duration, AnimationCurve ease) { return tr; } public static Transform Scale(this Transform tr, Vector3 to, float duration, AnimationCurve ease) { return tr; } } }   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  using System; using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.EventSystems; using MyTween; public class ButtonDirecting : MonoBehaviour, IPointerDownHandler, IPointerUpHandler { public AnimationCurve ease; public Vector2 toSize = Vector2.one; public float duration; private bool isTweening = false; private event Action onClick; private Vector2 fromSize; public void OnClick() { transform.Move(Vector3.one, 1f, ease).Scale(Vector3.one, 1f); } }   ","permalink":"https://qutrits.github.io/posts/2021_11_18_02/","summary":"유니티에서 여러가지 연습을 하려고 생각하고 있었을 때, 나만의 tween을 만들어 보고싶다고 생각했다. DoTween을 사용할 때 여러 함수들이 transform, image 등에서 부터 바로 DoTween 함수를 사용할 수 있었던 것이 기억에 남았다.\n  나도 이런식으로 바로바로 접근할 수 있으면 좋겠다고 생각을 해서 방법을 찾아보니, Extenstion Method 를 이용하면 되는 것!\n Extenstion Method가 뭐야? 🧐  특수한 종류의 Static 메서드. 다른 클래스의 인스턴스 메서드인 것 처럼 사용되는 기능. 클래스, 구조체, 인터페이스 등에 적용 가능.","title":"Extenstion Method: 확장 메서드"},{"content":"알고리즘 공부 백준 13116 🧐 잃어버린 괄호 👉문제 혹시 2007학년도 대학수학능력시험 수리영역 가형 이산수학 30번 문제를 아는가? 여러분은 수능을 치는 수험생의 마음으로 이 문제를 해결해야만 한다.\n하지만 우리는 저작권 위반으로 판사님을 뵙고 싶지 않았기 때문에 이 문제를 직접 수록할 수는 없었다. 아래 링크 중 하나를 클릭해서 pdf 파일을 내려받아 가장 마지막 페이지를 보면, 위의 그림과 아주 유사한 문제가 하나 있을 것이다. 여러분은 바로 그 문제를 해결해야만 한다.\n이미지 보러가기\n문제를 그대로 내면 재미없기 때문에, 우리는 위 그림과 같이 33과 79가 적혀 있던 부분을 하얀색 직사각형으로 가렸다. 그림에서 흐릿하게 보이는 모든 부분은 원래 문제와 다르지 않다.\n빈 칸에 들어갈 두 자연수가 주어졌을 때 문제를 해결하는 프로그램을 작성하자.\n👉입력 첫 번째 줄에 테스트 케이스의 수 T (1 ≤ T ≤ 50 000)가 주어진다. 이후 T개의 테스트 케이스가 주어진다. 각 테스트 케이스는 한 줄로 구성되어 있으며, 각 줄에는 두 개의 정수 A와 B (1 ≤ A, B ≤ 1 023, A ≠ B)가 공백을 사이로 두고 주어진다. 이는 첫 번째 빈 칸에는 A를, 두 번째 빈 칸에는 B를 넣었을 때 답을 구하라는 의미이다\n👉출력 각 테스트 케이스에 대해 답을 한 줄에 하나씩 출력한다.\n🍑풀이\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  using System; using System.Collections.Generic; using System.Linq; namespace Algorithm11 { class Baekjoon13116 { static void Main(string[] args) { int tCount = int.Parse(Console.ReadLine()!); var tlist = new List\u0026lt;int\u0026gt;(); for (int i = 0; i \u0026lt; tCount; i++) { var input = Console.ReadLine()!.Split(\u0026#39; \u0026#39;).Select(int.Parse).ToArray(); tlist.AddRange(input); } for (int i = 0; i \u0026lt; tCount; i++) { int n1 = tlist[2 * i]; int n2 = tlist[2 * i + 1]; while (n1 != n2) { while (n1 \u0026lt; n2) //n2가 n1보다 크지 않을 때까지  { n2 /= 2; } if (n1 == n2) //같다면 break;  { break; } n1 /= 2; //n1이 n2보다 크지 않을 때까지  } Console.WriteLine(n1 * 10); } } } }   문제풀러가기\n","permalink":"https://qutrits.github.io/posts/2021_11_24_01/","summary":"알고리즘 공부 백준 13116 🧐 잃어버린 괄호 👉문제 혹시 2007학년도 대학수학능력시험 수리영역 가형 이산수학 30번 문제를 아는가? 여러분은 수능을 치는 수험생의 마음으로 이 문제를 해결해야만 한다.\n하지만 우리는 저작권 위반으로 판사님을 뵙고 싶지 않았기 때문에 이 문제를 직접 수록할 수는 없었다. 아래 링크 중 하나를 클릭해서 pdf 파일을 내려받아 가장 마지막 페이지를 보면, 위의 그림과 아주 유사한 문제가 하나 있을 것이다. 여러분은 바로 그 문제를 해결해야만 한다.\n이미지 보러가기\n문제를 그대로 내면 재미없기 때문에, 우리는 위 그림과 같이 33과 79가 적혀 있던 부분을 하얀색 직사각형으로 가렸다.","title":"AlgorithmStudy_백준 13116"},{"content":"알고리즘 공부 백준 9461 🧐 파도반 수열 👉문제 아래의 그림과 같이 삼각형이 나선 모양으로 놓여져 있다. 첫 삼각형은 정삼각형으로 변의 길이는 1이다. 그 다음에는 다음과 같은 과정으로 정삼각형을 계속 추가한다. 나선에서 가장 긴 변의 길이를 k라 했을 때, 그 변에 길이가 k인 정삼각형을 추가한다.\n파도반 수열 P(N)은 나선에 있는 정삼각형의 변의 길이이다. P(1)부터 P(10)까지 첫 10개 숫자는 1, 1, 1, 2, 2, 3, 4, 5, 7, 9이다.\nN이 주어졌을 때, P(N)을 구하는 프로그램을 작성하시오.\n👉입력 첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, N이 주어진다. (1 ≤ N ≤ 100)\n👉출력 각 테스트 케이스마다 P(N)을 출력한다.\n🍑풀이\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  using System; using System.Linq; namespace Algorithm9 { class Baekjoon9461 { static void Main(string[] args) { var t = int.Parse(Console.ReadLine()!); var n = new int[t];//n 수열에서 뽑아 출력해야하는 n번째 수들의 배열  for (int i = 0; i \u0026lt; t; i++) { n[i] = int.Parse(Console.ReadLine()!); } var list = n.ToList(); list.Sort(); var max = list[t - 1];//입력 중 가장 큰 숫자  var padovan = new long[max]; padovan[0] = 1; padovan[1] = 1; padovan[2] = 1; while (padovan[^1] == 0) { for (int i = 3; i \u0026lt; max; i++)//입력된 가장 큰 수 번째까지 수열을 구한다.  { if (padovan[i] != 0) { continue; } padovan[i] = padovan[i - 3] + padovan[i - 2]; //(규칙) =\u0026gt; i번째는 i-3번째 + i-2번째  } } var result = new long[t];//결과값을 담을 배열  for (int i = 0; i \u0026lt; t; i++) { result[i] = padovan[n[i] - 1];//결과값의 배열에 n값의 순서대로 수열의 값을 대입  } Console.WriteLine(String.Join(\u0026#34;\\n\u0026#34;, result)); } } }   문제풀러가기\n","permalink":"https://qutrits.github.io/posts/2021_11_24_02/","summary":"알고리즘 공부 백준 9461 🧐 파도반 수열 👉문제 아래의 그림과 같이 삼각형이 나선 모양으로 놓여져 있다. 첫 삼각형은 정삼각형으로 변의 길이는 1이다. 그 다음에는 다음과 같은 과정으로 정삼각형을 계속 추가한다. 나선에서 가장 긴 변의 길이를 k라 했을 때, 그 변에 길이가 k인 정삼각형을 추가한다.\n파도반 수열 P(N)은 나선에 있는 정삼각형의 변의 길이이다. P(1)부터 P(10)까지 첫 10개 숫자는 1, 1, 1, 2, 2, 3, 4, 5, 7, 9이다.\nN이 주어졌을 때, P(N)을 구하는 프로그램을 작성하시오.","title":"AlgorithmStudy_백준 9461"},{"content":"블로그 만들기\n","permalink":"https://qutrits.github.io/posts/2021_11_18_01/","summary":"블로그 만들기","title":"My 1st post"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Gist  List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Gist  List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Gist  List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Gist  List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://qutrits.github.io/posts/2021_11_19_02/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Gist  List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://qutrits.github.io/posts/markdown-syntax/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","permalink":"https://qutrits.github.io/posts/rich-content/","summary":"\u003cp\u003eHugo ships with several \u003ca href=\"https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes\"\u003eBuilt-in Shortcodes\u003c/a\u003e for rich content, along with a \u003ca href=\"https://gohugo.io/about/hugo-and-gdpr/\"\u003ePrivacy Config\u003c/a\u003e and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\u003c/p\u003e","title":"Rich Content"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates (extend_head.html) like so: refer ISSUE #236  1 2 3  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}    To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\n\r\rExamples \rInline math: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\)\rBlock math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","permalink":"https://qutrits.github.io/posts/math-typesetting/","summary":"\u003cp\u003eMathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\u003c/p\u003e","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }   \r.emojify {\rfont-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols;\rfont-size: 2rem;\rvertical-align: middle;\r}\r@media screen and (max-width:650px) {\r.nowrap {\rdisplay: block;\rmargin: 25px 0;\r}\r}\r","permalink":"https://qutrits.github.io/posts/emoji-support/","summary":"\u003cp\u003eEmoji can be enabled in a Hugo project in a number of ways.\u003c/p\u003e","title":"Emoji Support"}]